L. Campoli, A. Assonitis, M. Ciallella, R. Paciorri, A. Bonfiglioli, M. Ricchiuto,
UnDiFi-2D: an Unstructured Discontinuity Fitting code for 2D grids,
Computer Physics Communications,
2021,
108202,
ISSN 0010-4655,
https://doi.org/10.1016/j.cpc.2021.108202.
(https://www.sciencedirect.com/science/article/pii/S0010465521003143)
Abstract: UnDiFi-2D, an open source (free software) Unstructured-grid, Discontinuity Fitting code, is presented. The aim of UnDiFi-2D is to model gas-dynamic discontinuities in two-dimensional (2D) flows as if they were true discontinuities of null thickness that bound regions of the flow-field where a smooth solution to the governing PDEs exists. UnDiFi-2D therefore needs to be coupled with an unstructured CFD solver that is used to discretize the governing PDEs within the smooth regions of the flow-field. Two different, in-house developed, CFD solvers are also included in the current distribution. The main features of the UnDiFi-2D software can be summarized as follows: Programming Language UnDiFi-2D is written in standard Fortran 77/95; its design is highly modular in order to enhance simplicity of use, maintenance and allow coupling with virtually any existing CFD solver; Usability, Maintenance and Enhancement In order to improve the usability, maintenance and enhancement of the code also the documentation has been carefully taken into account. The git distributed versioning system has been adopted to facilitate collaborative maintenance and code development; Copyrights UnDiFi-2D is a free software that anyone can use, copy, distribute, change and improve under the GNU Public License version 3. The present paper is a manifesto of the first public release of the UnDiFi-2D code. It describes the currently implemented features, which are the result of more than a decade of still ongoing CFD developments. This work is focused on the computational techniques adopted and a detailed description of the main characteristics is reported. UnDiFi-2D capabilities are demonstrated by means of examples test cases. The design of the code allows to easily include existing CFD codes and is aimed at ease code reuse and readability.
Program summary
Program title: UnDiFi-2D CPC Library link to program files: https://doi.org/10.17632/5hwssmc2mx.1 Licensing provisions: GNU General Public Licence, version 3 Programming language: Fortran; developed and tested with Intel Fortran Compiler v. 18.0.3 and GNU gfortran. External routines: The code depends on several libraries and third-party packages which are detailed in the corpus of the text. Nature of problem: Numerical computation of flows with discontinuities. Solution method: : Shock-fitting technique. Additional comments including restrictions and unusual features:•At present, UnDiFi-2D is validated for inviscid steady and unsteady two-dimensional flows without changes in the number of discontinuity lines and interaction points.UnDiFi-2D implements a shock-fitting algorithm and can be coupled with unstructured cell-vertex solvers, with an Arbitrary Langrangian-Eulerian (ALE) formulation. UnDiFi-2D project adopts git [1], a free and open source distributed version control system. A public repository dedicated to UnDiFi-2D project [2] has been created on github [3], a web-based hosting service for software development projects using git versioning system. Finally, a comprehensive documentation is provided in the form of user manual developed in Pandoc [4].
References
[1]Git, a free and open source distributed version control system, http://git-scm.com.[2]UnDiFi-2D documentation, https://github.com/UnDiFi/UnDiFi-2D.[3]Github, a web-based hosting service for software development projects using git versioning system, https://github.com.[4]Dominici, M. (2014). An overview of Pandoc. TUGboat, 35(1), 44-50.
Keywords: CFD; Fortran; C; shock-fitting; shock-capturing,; unstructured grids

@article{CAMPOLI2019244,
title = {KAPPA: Kinetic approach to physical processes in atmospheres library in C++},
journal = {Computer Physics Communications},
volume = {236},
pages = {244-267},
year = {2019},
issn = {0010-4655},
doi = {https://doi.org/10.1016/j.cpc.2018.10.016},
url = {https://www.sciencedirect.com/science/article/pii/S0010465518303643},
author = {L. Campoli and G.P. Oblapenko and E.V. Kustova},
keywords = {CFD, KAPPA, OOP C++, Non-equilibrium reacting flow, Transport properties},
abstract = {KAPPA, an open-source software library for the computation of thermodynamic and transport properties in non-equilibrium gas flows and species production rates, is presented. Thermodynamic properties rely on custom databases which describe the characteristics of atoms and molecules and interaction features. Mixture thermodynamic properties are formulated from species quantities. Species production rates are based on elementary chemical reactions and vibrational energy transitions. Transport properties are derived from kinetic theory which provides relationships for transport coefficients depending on the flow model. Several levels of non-equilibrium flow description are implemented: the detailed state-to-state (STS) approach, multi-temperature and one-temperature models. Sets of transport coefficients depend on the deviation from equilibrium; in the state-to-state model, they include state-resolved diffusion coefficients for each pair of vibrational states. A highly modular, object-oriented application program interface (API) has been developed. The adopted object-oriented programming paradigm (OOP), along with the implemented models of state-resolved physico-chemical relaxation rates, is presented. The design of the library allows it to be easily included in existing CFD codes and is aimed at code reusability and readability. Program Title: KAPPA Program Files doi: http://dx.doi.org/10.17632/mrx9n35bvs.1 Licensing provisions: GNU General Public Licence, version 3. Programming language: C++; developed and tested with Intel Compiler v. 18.x and GNU. External routines/libraries: KAPPA must be linked to yaml-cpp [1] in order to read human-readable database files and to Armadillo [2] for solving algebraic linear systems. Nature of problem: Numerical computation of transport properties and rate exchange coefficients for non-equilibrium reacting flows. Solution method: Non-equilibrium reacting flow is treated by a rigorous state-to-state (STS) kinetic theory approach. Restrictions: At present, KAPPA is validated for computing transport properties and rate exchange coefficients using the state-to-state (STS) approach; 1- and 2-temperature models have still to be validated, but they are already implemented. C++ compiler is mandatory. Unusual features: KAPPA is an open-source object-oriented highly modular and easy-to-maintain C++ software library which implements rigorous mathematical kinetic theory models. Additional comments: KAPPA project adopts Git [3], a free and open source distributed version control system. A public repository dedicated to KAPPA project [4] has been created on github, a web-based hosting service for software development projects using git versioning system. Finally, a comprehensive documentation [5] is provided parsing source code comments by means of doxygen software [6]. References: [1] Yaml-cpp is a YAML parser and emitter in C++ matching the YAML 1.2 specification. https://github.com/jbeder/yaml-cpp. [2] Armadillo is a fast C++ matrix library with easy to use functions and syntax, deliberately similar to Matlab which uses template meta-programming techniques. https://sourceforge.net/projects/arma/files/armadillo-8.500.1.tar.zx. [3] Git, a free and open source distributed version control system. http://git-scm.com. [4] Github, a web-based hosting service for software development projects using git versioning system. https://github.com. [5] Official KAPPA documentation. https://github.com/lkampoli/kappa. [6] Doxygen, a documentation system for many programming languages. http://www.stack.nl/ dimitri/doxygen.}
}

@misc{campoli2021undifi2d,
      title={UnDiFi-2D: an Unstructured Discontinuity Fitting code for 2D grids}, 
      author={L. Campoli and A. Assonitis and M. Ciallella and R. Paciorri and A. Bonfiglioli and M. Ricchiuto},
      year={2021},
      eprint={2105.14269},
      archivePrefix={arXiv},
      primaryClass={physics.flu-dyn}
}

@misc{campoli2021assessment,
      title={Assessment of machine learning methods for state-to-state approaches}, 
      author={Lorenzo Campoli and Elena Kustova and Polina Maltseva},
      year={2021},
      eprint={2104.01042},
      archivePrefix={arXiv},
      primaryClass={physics.flu-dyn}
}

